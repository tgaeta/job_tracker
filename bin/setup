#!/usr/bin/env ruby

require "bundler/inline"
require "fileutils"

begin
  Gem::Specification.find_by_name("colorize")
rescue LoadError
  puts "Installing colorize gem"
  system("gem install colorize")
end

require "colorize"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

# Execute a shell command and raise an error if it fails.
def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

# Check if a command exists
def command?(name)
  [name, *ENV["PATH"].split(File::PATH_SEPARATOR).map { |p| File.join(p, name) }].find { |f| File.executable?(f) }
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "\n== Installing gems =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")
  puts "Gems installed".green

  puts "\n== Installing packages using bun=="
  if command?("bun")
    system!("bun install")
  else
    puts "bun not found, visit https://bun.sh/docs/installation to install bun".red
  end

  puts "\n== Preparing database =="
  if File.exist?("config/database.yml")
    system! "bin/rails db:prepare"
    puts "Database setup complete".green
  else
    puts "config/database.yml not found".red
    exit 1
  end

  if !Dir.exist?("tmp/pids")
    puts "\n== Creating tmp/pids directory =="
    system!("bin/rails tmp:create")
    puts "tmp/pids directory created".green
  end

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"
  puts "Old logs and tempfiles removed".green

  puts ""
  puts "You're set!! ðŸŽ‰ðŸŽ‰ðŸŽ‰".green
  puts ""
  puts "  #{"bin/dev".yellow} to start the server, then visit http://localhost:3000"
  puts "  #{"bin/rails test:all".yellow} to run tests"
end
